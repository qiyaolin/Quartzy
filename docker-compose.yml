version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: quartzy_db
      POSTGRES_USER: quartzy_user
      POSTGRES_PASSWORD: quartzy_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quartzy_user -d quartzy_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend
  backend:
    build: 
      context: ./bio-inventory-backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=docker-development-key-change-in-production
      - DATABASE_URL=postgresql://quartzy_user:quartzy_password@db:5432/quartzy_db
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./bio-inventory-backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # React Frontend
  frontend:
    build:
      context: ./bio-inventory-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000/api
      - REACT_APP_APP_NAME=Quartzy
      - REACT_APP_VERSION=1.0.0
    volumes:
      - ./bio-inventory-frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    stdin_open: true
    tty: true

  # Nginx (Production Ready)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - backend
      - frontend
    profiles:
      - production

volumes:
  postgres_data:
  static_volume:
  media_volume: