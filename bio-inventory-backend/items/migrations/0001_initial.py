# Generated by Django 5.2.4 on 2025-07-21 15:38

import django.db.models.deletion
import items.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('custom_fields_schema', models.JSONField(blank=True, default=dict, help_text='Schema for type-specific custom fields.')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the vendor (e.g., Sigma-Aldrich, NEB)', max_length=255, unique=True)),
                ('website', models.URLField(blank=True, help_text="Vendor's website", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the location (e.g., -80Â°C Freezer, Shelf A, Chemical Cabinet)', max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, help_text='Parent location for creating a hierarchy (e.g., a specific shelf inside a freezer)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='items.location')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(default=items.models.generate_serial_number, editable=False, max_length=20, unique=True)),
                ('name', models.CharField(help_text='The common name of the item.', max_length=255)),
                ('catalog_number', models.CharField(blank=True, max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, default=1.0, max_digits=10)),
                ('unit', models.CharField(help_text="e.g., 'units', 'boxes', 'kg', 'mL'", max_length=50)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('url', models.URLField(blank=True, help_text='Link to the product page.')),
                ('low_stock_threshold', models.PositiveIntegerField(blank=True, help_text='Threshold to trigger a low stock warning.', null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('barcode', models.CharField(blank=True, help_text='Unique barcode for this item', max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('properties', models.JSONField(blank=True, default=dict, help_text='Type-specific custom fields and values.')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_items', to=settings.AUTH_USER_MODEL)),
                ('item_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='items.itemtype')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='items.location')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='items.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
