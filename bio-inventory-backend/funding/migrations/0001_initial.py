# Generated by Django 5.2.4 on 2025-07-23 07:11

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Fund",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "total_budget",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "spent_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "funding_source",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "funding_agency",
                    models.IntegerField(
                        choices=[
                            (1, "Canadian Institutes of Health Research (CIHR)"),
                            (
                                2,
                                "Natural Sciences and Engineering Research Council (NSERC)",
                            ),
                            (
                                3,
                                "Social Sciences and Humanities Research Council (SSHRC)",
                            ),
                            (4, "Other Funding Source"),
                        ],
                        default=4,
                        help_text="Canadian Tri-Agency or other funding source",
                    ),
                ),
                (
                    "grant_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "principal_investigator",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "grant_duration_years",
                    models.IntegerField(
                        default=1,
                        help_text="Total duration of the grant in years",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "current_year",
                    models.IntegerField(
                        default=1,
                        help_text="Current year of the multi-year grant",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "annual_budgets",
                    models.JSONField(
                        default=dict,
                        help_text='Annual budget allocations: {"2024": 50000.00, "2025": 55000.00, ...}',
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FundingReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly Report"),
                            ("quarterly", "Quarterly Report"),
                            ("annual", "Annual Report"),
                            ("custom", "Custom Report"),
                            (
                                "form300",
                                "Form 300 - Grants in Aid of Research Statement",
                            ),
                            ("tri_agency_annual", "Tri-Agency Annual Financial Report"),
                            ("audit_trail", "Audit Trail Report (7-year compliance)"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "fiscal_year",
                    models.IntegerField(
                        blank=True,
                        help_text="Fiscal year for this report (auto-calculated)",
                        null=True,
                    ),
                ),
                (
                    "summary_data",
                    models.JSONField(
                        default=dict,
                        help_text="Summary data including direct/indirect costs, category breakdowns, etc.",
                    ),
                ),
                (
                    "is_tri_agency_compliant",
                    models.BooleanField(
                        default=False,
                        help_text="Meets Canadian Tri-Agency reporting requirements",
                    ),
                ),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("funds", models.ManyToManyField(blank=True, to="funding.fund")),
                (
                    "generated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-generated_at"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("purchase", "Purchase"),
                            ("adjustment", "Budget Adjustment"),
                            ("transfer", "Fund Transfer"),
                            ("refund", "Refund"),
                            ("carryover", "Carry-over from Previous Year"),
                        ],
                        default="purchase",
                        max_length=20,
                    ),
                ),
                (
                    "cost_type",
                    models.CharField(
                        choices=[
                            ("direct", "Direct Research Cost"),
                            ("indirect", "Indirect Cost (Administrative)"),
                        ],
                        default="direct",
                        help_text="Classify as direct research cost or indirect administrative cost",
                        max_length=10,
                    ),
                ),
                (
                    "expense_category",
                    models.CharField(
                        choices=[
                            ("personnel", "Personnel Salaries & Benefits"),
                            ("equipment", "Equipment"),
                            ("supplies", "Supplies & Materials"),
                            ("travel", "Travel & Conference"),
                            ("services", "Professional Services"),
                            ("facilities", "Facilities & Overhead"),
                            ("other", "Other Direct Costs"),
                        ],
                        default="supplies",
                        help_text="Expense category for TAGFA reporting requirements",
                        max_length=15,
                    ),
                ),
                (
                    "fiscal_year",
                    models.IntegerField(
                        blank=True,
                        help_text="Fiscal year for this transaction (auto-calculated)",
                        null=True,
                    ),
                ),
                ("item_name", models.CharField(blank=True, max_length=200, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("request_id", models.IntegerField(blank=True, null=True)),
                (
                    "reference_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("transaction_date", models.DateTimeField(auto_now_add=True)),
                (
                    "invoice_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("vendor", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "fund",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="funding.fund",
                    ),
                ),
            ],
            options={
                "ordering": ["-transaction_date"],
            },
        ),
        migrations.CreateModel(
            name="BudgetAllocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(max_length=100)),
                (
                    "allocated_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "spent_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "fund",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allocations",
                        to="funding.fund",
                    ),
                ),
            ],
            options={
                "ordering": ["category"],
                "unique_together": {("fund", "category")},
            },
        ),
        migrations.CreateModel(
            name="FundCarryOver",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "from_fiscal_year",
                    models.IntegerField(
                        help_text="Fiscal year the funds are being carried over from"
                    ),
                ),
                (
                    "to_fiscal_year",
                    models.IntegerField(
                        help_text="Fiscal year the funds are being carried over to"
                    ),
                ),
                (
                    "carryover_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount being carried over",
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "original_budget",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Original budget for the from_fiscal_year",
                        max_digits=12,
                    ),
                ),
                (
                    "spent_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount spent in the from_fiscal_year",
                        max_digits=12,
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this carry-over has been approved by administrator",
                    ),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "is_processed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the carry-over transaction has been created",
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_carryovers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "fund",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carryovers",
                        to="funding.fund",
                    ),
                ),
            ],
            options={
                "ordering": ["-from_fiscal_year", "-created_at"],
                "unique_together": {("fund", "from_fiscal_year", "to_fiscal_year")},
            },
        ),
    ]
